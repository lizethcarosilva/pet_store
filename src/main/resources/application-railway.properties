# ================================================
# CONFIGURACIÓN ESPECÍFICA PARA RAILWAY
# ================================================

spring.application.name=pet_store

# Puerto dinámico de Railway
server.port=${PORT:8090}

# ================================================
# BASE DE DATOS POSTGRESQL - RAILWAY
# ================================================

# Railway proporciona DATABASE_URL en formato completo
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/railway}
spring.datasource.username=${POSTGRES_USER:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:password}
spring.datasource.driver-class-name=org.postgresql.Driver

# Pool de conexiones (optimizado para Railway)
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# ================================================
# JPA / HIBERNATE
# ================================================

spring.jpa.hibernate.ddl-auto=${DDL_AUTO:update}
spring.jpa.show-sql=${SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.open-in-view=false

# ================================================
# LOGGING
# ================================================

logging.level.root=INFO
logging.level.com.cipasuno.petstore=${DEBUG:INFO}
logging.level.org.springframework.web=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=${SHOW_SQL:false}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ================================================
# ACTUATOR (Health Checks para Railway)
# ================================================

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true

# ================================================
# SWAGGER / OPENAPI
# ================================================

springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha

# ================================================
# CONFIGURACIÓN DE SEGURIDAD Y CORS
# ================================================

# Permitir orígenes específicos (actualizar según necesites)
spring.web.cors.allowed-origins=*
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS,PATCH
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=false
spring.web.cors.max-age=3600

# ================================================
# CONFIGURACIÓN DE SERVIDOR
# ================================================

# Comprimir respuestas
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# Timeouts
server.tomcat.connection-timeout=20000
server.tomcat.max-connections=10000
server.tomcat.threads.max=200
server.tomcat.threads.min-spare=10

# ================================================
# VARIABLES DE ENTORNO ADICIONALES
# ================================================

# JWT y otras configuraciones de seguridad
jwt.secret=${JWT_SECRET:defaultSecretKeyForDevelopmentOnly123456789012345678901234567890}
jwt.expiration=${JWT_EXPIRATION:86400000}

# ================================================
# CARACTERÍSTICAS DE SPRING BOOT
# ================================================

spring.main.banner-mode=log
spring.output.ansi.enabled=ALWAYS

